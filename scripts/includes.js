// ==========================================================================================
// üîÑ includes.js ‚Äì Inclus√£o din√¢mica de componentes HTML parciais (Agroverso)
// üå± Vers√£o refinada com sincroniza√ß√£o inteligente e execu√ß√£o modular p√≥s-carregamento
// ==========================================================================================

document.addEventListener("DOMContentLoaded", () => {
  const elementos = document.querySelectorAll("[data-include]");

  const includesPromises = Array.from(elementos).map(async (elemento) => {
    const caminho = elemento.getAttribute("data-include");
    if (!caminho) return;

    try {
      const resposta = await fetch(caminho);
      if (!resposta.ok) throw new Error(`Erro ${resposta.status} ‚Äì ${resposta.statusText}`);

      const conteudo = await resposta.text();
      elemento.innerHTML = conteudo;

      console.info(`[includes.js] ‚úÖ Include carregado: ${caminho}`);

      // üéØ Executa initMenuLateral() se o include for do menu
      if (caminho.includes("menu.html") && typeof window.initMenuLateral === "function") {
        window.initMenuLateral();
        console.info("[includes.js] ‚ò∞ initMenuLateral() executado ap√≥s incluir menu.");
      }

    } catch (erro) {
      console.error(`[includes.js] ‚ùå Falha ao carregar '${caminho}':`, erro);
      elemento.innerHTML = `<!-- erro ao incluir ${caminho} -->`;
    }
  });

  // üîÅ Executa a√ß√µes globais ao final de todos os includes (se necess√°rio futuramente)
  Promise.all(includesPromises).then(() => {
    console.info("[includes.js] ‚úÖ Todos os includes foram processados.");
  });
});
